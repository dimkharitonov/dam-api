# NOTE: update this with your service name
service: dam-api
app: dam-api
tenant: dimkharitonov

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-export-env

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  stage: ${opt:stage, self:provider.stage}
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  memorySize: 256
  timeout: 10

  environment:
    tableName:
      Ref: AssetsMetaTable
    assetsBucketName:
      Ref: AssetsBucket

  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:DescribeTable
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    # Restrict our IAM role permissions to
    # the specific table for the stage
    Resource:
    - "Fn::GetAtt": [ AssetsMetaTable, Arn ]
  - Effect: Allow
    Action:
    - s3:GetObject
    - s3:PutObject
    - s3:DeleteObject
    Resource:
      Fn::Join:
      - ""
      - - "Fn::GetAtt": [ AssetsBucket, Arn ]
        - "/*"

functions:
  create:
    handler: handlers/create.main
    events:
      - http:
          path: assets
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: handlers/get.main
    events:
      - http:
          path: assets/{fileName}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: handlers/list.main
    events:
      - http:
          path: assets/list/{fileType}
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: handlers/update.main
    events:
      - http:
          path: assets/{fileName}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: handlers/delete.main
    events:
      - http:
          path: assets/{fileName}
          method: delete
          cors: true
          authorizer: aws_iam
  resize:
    handler: handlers/resize.main
    events:
      - http:
          path: assets/resize/{fileName}
          method: put
          cors: true
          authorizer: aws_iam
    memorySize: 1024
    timeout: 15



resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
  # S3
  - ${file(resources/s3buckets.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
